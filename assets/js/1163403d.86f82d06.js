/*! For license information please see 1163403d.86f82d06.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[260137],{93838:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=s(474848),r=s(28453);const o={id:"adrs-adr013",title:"ADR013: [superseded] Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, node-fetch, and cross-fetch for data fetching."},c=void 0,i={id:"architecture-decisions/adrs-adr013",title:"ADR013: [superseded] Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, node-fetch, and cross-fetch for data fetching.",source:"@site/../docs/architecture-decisions/adr013-use-node-fetch.md",sourceDirName:"architecture-decisions",slug:"/architecture-decisions/adrs-adr013",permalink:"/docs/next/architecture-decisions/adrs-adr013",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/architecture-decisions/adr013-use-node-fetch.md",tags:[],version:"current",frontMatter:{id:"adrs-adr013",title:"ADR013: [superseded] Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, node-fetch, and cross-fetch for data fetching."},sidebar:"docs",previous:{title:"ADR012: Use Luxon.toLocaleString and date/time presets",permalink:"/docs/next/architecture-decisions/adrs-adr012"},next:{title:"Deprecations",permalink:"/docs/next/api/deprecations"}},a={},d=[{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.admonition,{title:"Superseded",type:"note",children:(0,t.jsxs)(n.p,{children:["This ADR has been superseded by ",(0,t.jsx)(n.a,{href:"/docs/next/architecture-decisions/adrs-adr014",children:"ADR014"})," and no longer applies."]})}),"\n",(0,t.jsx)(n.h2,{id:"context",children:"Context"}),"\n",(0,t.jsx)(n.p,{children:"Using multiple HTTP packages for data fetching increases the complexity and the\nsupport burden of keeping said package up to date."}),"\n",(0,t.jsx)(n.h2,{id:"decision",children:"Decision"}),"\n",(0,t.jsxs)(n.p,{children:["Backend (node) packages should use the ",(0,t.jsx)(n.code,{children:"node-fetch"})," package for HTTP data\nfetching. Example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import fetch from 'node-fetch';\nimport { ResponseError } from '@backstage/errors';\n\nconst response = await fetch('https://example.com/api/v1/users.json');\nif (!response.ok) {\n  throw await ResponseError.fromResponse(response);\n}\nconst users = await response.json();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Frontend plugins and packages should prefer to use the\n",(0,t.jsx)(n.a,{href:"https://backstage.io/docs/reference/core-plugin-api.fetchapiref",children:(0,t.jsx)(n.code,{children:"fetchApiRef"})}),".\nIt uses ",(0,t.jsx)(n.code,{children:"cross-fetch"})," internally. Example:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import { useApi } from '@backstage/core-plugin-api';\n\n// Inside some functional React component...\nconst { fetch } = useApi(fetchApiRef);\n\nconst response = await fetch('https://example.com/api/v1/users.json');\nif (!response.ok) {\n  throw await ResponseError.fromResponse(response);\n}\nconst users = await response.json();\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Isomorphic packages should have a dependency on the ",(0,t.jsx)(n.code,{children:"cross-fetch"})," package for\nmocking and type definitions. Preferably, classes and functions in isomorphic\npackages should accept an argument of type ",(0,t.jsx)(n.code,{children:"typeof fetch"})," to let callers supply\ntheir preferred implementation of ",(0,t.jsx)(n.code,{children:"fetch"}),". This lets them adorn the calls with\nauth or other information, and track metrics etc, in a cross-platform way.\nExample:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ts",children:"import crossFetch from 'cross-fetch';\n\nexport class MyClient {\n  private readonly fetch: typeof crossFetch;\n\n  constructor(options: { fetch?: typeof crossFetch }) {\n    this.fetch = options.fetch || crossFetch;\n  }\n\n  async users() {\n    return await this.fetch('https://example.com/api/v1/users.json');\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"consequences",children:"Consequences"}),"\n",(0,t.jsxs)(n.p,{children:["We will gradually transition away from third party packages such as ",(0,t.jsx)(n.code,{children:"axios"}),",\n",(0,t.jsx)(n.code,{children:"got"})," and others. Once we have transitioned to ",(0,t.jsx)(n.code,{children:"node-fetch"})," we will add lint\nrules to enforce this decision."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},221020:(e,n,s)=>{var t=s(296540),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,i=t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,n,s){var t,o={},d=null,p=null;for(t in void 0!==s&&(d=""+s),void 0!==n.key&&(d=""+n.key),void 0!==n.ref&&(p=n.ref),n)c.call(n,t)&&!a.hasOwnProperty(t)&&(o[t]=n[t]);if(e&&e.defaultProps)for(t in n=e.defaultProps)void 0===o[t]&&(o[t]=n[t]);return{$$typeof:r,type:e,key:d,ref:p,props:o,_owner:i.current}}n.Fragment=o,n.jsx=d,n.jsxs=d},474848:(e,n,s)=>{e.exports=s(221020)},28453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>i});var t=s(296540);const r={},o=t.createContext(r);function c(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);