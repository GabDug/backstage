/*! For license information please see a65a333d.bae265be.js.LICENSE.txt */
"use strict";(self.webpackChunkbackstage_microsite=self.webpackChunkbackstage_microsite||[]).push([[836331],{440510:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var s=n(474848),r=n(28453);const o={id:"adrs-adr014",title:"ADR014: Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, native fetch, and cross-fetch for data fetching."},c=void 0,i={id:"architecture-decisions/adrs-adr014",title:"ADR014: Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, native fetch, and cross-fetch for data fetching.",source:"@site/../docs/architecture-decisions/adr014-use-fetch.md",sourceDirName:"architecture-decisions",slug:"/architecture-decisions/adrs-adr014",permalink:"/docs/next/architecture-decisions/adrs-adr014",draft:!1,unlisted:!1,editUrl:"https://github.com/backstage/backstage/edit/master/docs/architecture-decisions/adr014-use-fetch.md",tags:[],version:"current",frontMatter:{id:"adrs-adr014",title:"ADR014: Proper use of HTTP fetching libraries",description:"Architecture Decision Record (ADR) for the proper use of fetchApiRef, native fetch, and cross-fetch for data fetching."}},a={},d=[{value:"Context",id:"context",level:2},{value:"Decision",id:"decision",level:2},{value:"Consequences",id:"consequences",level:2}];function h(e){const t={a:"a",code:"code",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,s.jsxs)(t.p,{children:["Until now we have been recommending the use of ",(0,s.jsx)(t.code,{children:"node-fetch"})," in Node.js contexts\nthrough ",(0,s.jsx)(t.a,{href:"/docs/next/architecture-decisions/adrs-adr013",children:"ADR013"}),". Since then, Backstage has had its\nminimum requirements upgraded to Node.js 20 or newer. The Node.js platform has\nestablished a stable, reliable ",(0,s.jsx)(t.code,{children:"undici"})," based native ",(0,s.jsx)(t.code,{children:"fetch"})," in these versions.\nAdditionally, there are ",(0,s.jsx)(t.a,{href:"https://github.com/backstage/backstage/issues/24590",children:"some issues"}),"\nwith using third party libraries that only appeared in newer versions of\nNode.js."]}),"\n",(0,s.jsx)(t.h2,{id:"decision",children:"Decision"}),"\n",(0,s.jsxs)(t.p,{children:["All code that is executed in Node.js (including backend and CLIs) should use the\nnative ",(0,s.jsx)(t.code,{children:"fetch"})," for HTTP data fetching, and ",(0,s.jsx)(t.code,{children:"typeof fetch"})," as the TypeScript type\nin code where a ",(0,s.jsx)(t.code,{children:"fetch"})," implementation can be injected or is referred to.\nExample:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { ResponseError } from '@backstage/errors';\n\n// this is implicitly global.fetch\nconst response = await fetch('https://example.com/api/v1/users.json');\nif (!response.ok) {\n  throw await ResponseError.fromResponse(response);\n}\nconst users = await response.json();\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Frontend plugins and packages should prefer to use the\n",(0,s.jsx)(t.a,{href:"https://backstage.io/docs/reference/core-plugin-api.fetchapiref",children:(0,s.jsx)(t.code,{children:"fetchApiRef"})}),"."]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import { useApi } from '@backstage/core-plugin-api';\n\n// Inside some React component...\nconst { fetch } = useApi(fetchApiRef);\n\nconst response = await fetch('https://example.com/api/v1/users.json');\nif (!response.ok) {\n  throw await ResponseError.fromResponse(response);\n}\nconst users = await response.json();\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Isomorphic packages should have a dependency on the ",(0,s.jsx)(t.code,{children:"cross-fetch"})," package for\nmocking and type definitions. Preferably, classes and functions in isomorphic\npackages should accept an argument of type ",(0,s.jsx)(t.code,{children:"typeof fetch"})," to let callers supply\ntheir preferred implementation of ",(0,s.jsx)(t.code,{children:"fetch"}),". This lets them adorn the calls with\nauth or other information, and track metrics etc, in a cross-platform way.\nExample:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-ts",children:"import crossFetch from 'cross-fetch';\n\nexport class MyClient {\n  private readonly fetch: typeof crossFetch;\n\n  constructor(options: { fetch?: typeof crossFetch }) {\n    this.fetch = options.fetch || crossFetch;\n  }\n\n  async users() {\n    return await this.fetch('https://example.com/api/v1/users.json');\n  }\n}\n"})}),"\n",(0,s.jsx)(t.h2,{id:"consequences",children:"Consequences"}),"\n",(0,s.jsxs)(t.p,{children:["We will gradually transition away from third party ",(0,s.jsx)(t.code,{children:"fetch"})," replacement packages\nsuch as ",(0,s.jsx)(t.code,{children:"node-fetch"})," and others on the Node.js platform."]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},221020:(e,t,n)=>{var s=n(296540),r=Symbol.for("react.element"),o=Symbol.for("react.fragment"),c=Object.prototype.hasOwnProperty,i=s.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a={key:!0,ref:!0,__self:!0,__source:!0};function d(e,t,n){var s,o={},d=null,h=null;for(s in void 0!==n&&(d=""+n),void 0!==t.key&&(d=""+t.key),void 0!==t.ref&&(h=t.ref),t)c.call(t,s)&&!a.hasOwnProperty(s)&&(o[s]=t[s]);if(e&&e.defaultProps)for(s in t=e.defaultProps)void 0===o[s]&&(o[s]=t[s]);return{$$typeof:r,type:e,key:d,ref:h,props:o,_owner:i.current}}t.Fragment=o,t.jsx=d,t.jsxs=d},474848:(e,t,n)=>{e.exports=n(221020)},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>i});var s=n(296540);const r={},o=s.createContext(r);function c(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);